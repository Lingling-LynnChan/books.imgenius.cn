version: '3.8'

services:
  # Django Web应用
  web:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DEBUG=False
      - SECRET_KEY=your-production-secret-key-here
      - ALLOWED_HOSTS=localhost,127.0.0.1,your-domain.com
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - MONGODB_URI=mongodb://mongodb:27017/booksite
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_PORT=587
      - EMAIL_USE_TLS=True
      - EMAIL_HOST_USER=your-email@gmail.com
      - EMAIL_HOST_PASSWORD=your-app-password
      - DEFAULT_FROM_EMAIL=noreply@booksite.com
      - AI_CHECK_API_URL=http://localhost:8000/api/check
      - AI_CHECK_API_KEY=your-ai-api-key
    volumes:
      - media_volume:/app/media
      - static_volume:/app/staticfiles
    depends_on:
      - redis
      - mongodb
    restart: unless-stopped

  # Redis缓存服务
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  # MongoDB数据库服务
  mongodb:
    image: mongo:7
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=booksite
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    restart: unless-stopped

  # Nginx反向代理 (可选)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
      - ./ssl:/etc/nginx/ssl:ro  # SSL证书目录 (如果需要HTTPS)
    depends_on:
      - web
    restart: unless-stopped

volumes:
  mongodb_data:
  redis_data:
  media_volume:
  static_volume:
